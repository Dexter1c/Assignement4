/**
 * @author Dexter Canton
 *
 */
public class HashCode {

    private int TABLE_SIZE;
    private int size; 
    private HashEntry[] table;
 
    public HashCode(int ts) {
        size = 0;
        TABLE_SIZE = ts;
        table = new HashEntry[TABLE_SIZE];
        for (int i = 0; i < TABLE_SIZE; i++)
            table[i] = null;
    } 
    public int getSize() {
        return size;
    }
    public void clearTable() {
        for (int i = 0; i < TABLE_SIZE; i++)
            table[i] = null;
        size = 0;
    }
    
    public String get(String key) {
        int index = findIndex(key);
        if (table[index] == null) {
        	System.out.println("here");
			return key;
        }
		else {
			System.out.println("password: " + table[index].getValue());
			return table[index].getValue();
		}
    }
    
    public void put(String key, String value) {
        table[findIndex(key)] = new HashEntry(key, value);
        size++;
    }

    public void remove(String key) {
        table[findIndex(key)] = null;
        size--;
    }

    private int calculateHashCode(String key) {
        int mod = key.hashCode() % TABLE_SIZE;
        return mod < 0 ? mod + TABLE_SIZE : mod;
    }
    
    private int findIndex(String key) {
        int index = calculateHashCode(key);
        //while (table[index] != null && !table[index].getKey().equals(key)) {
        //    index = (index + 1) % TABLE_SIZE;
        //}
        
        return index;
    }
}
