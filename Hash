/**
 * @author Dexter Canton
 *
 */
    public class HashCode {

private int tsize;
 private int sizeOfHash; 
 private HashEntry[] table;

    public HashCode(int ts) {
        sizeOfHash = 0;
        tsize = ts;
        table = new HashEntry[tsize];
        for (int i = 0; i < tsize; i++)
            table[i] = null;
    } 
    public int getSize()
     {

        return sizeOfHash;
    }
    public void clearTable() {

        //this for loop calcuates the integer before it is used in the last if statement
        for (int i = 0; i < tsize; i++
               table[i] = null;
        sizeOfHash = 0;
    }
    public String get(String key) {
      int index = receiveKey(key);
        if (table[index] == null) {
        	System.out.println("here");
			return key;
	else {
			System.out.println("password: " + table[index].getValue());
			return table[index].getValue();

            else if (key) {
                System.out.println("not here, try again")
                
            }
	}
    }
    }
    public void put(String key, String value) {
        table[receiveKey(key)] = new HashEntry(key, value);Code
        size++;
    }
  public void remove(String key) {
        table[receiveKey(key)] = null;
        sizeOfHash--;
    }
    private int calculateHashCode(String key) {
        int mod = key.hashCode() % tsize;
        return mod < 0 ? mod + tsize : mod;
    }
    private int findIndex(String key) {
        int index = calculateHashCode(key);
        //Have while loop run to figure out the integer of the hash code 
        //
                return index;
    

    }
    }
